from discord.ext import commands as cum
from discord.utils import get
from discord.ui import Button, View
import discord
import random
import sqlite3
import config
import validators

prefix = config.PREFIX


class ForAll(cum.Cog):
    def __init__(self, bot):
        self.bot = bot

    @cum.command()
    async def random(self, ctx, number1=1, number2=10):
        a = random.randint(number1, number2)
        await ctx.send(f"–í–∞—à–µ —á–∏—Å–ª–æ: {a}")

    @cum.command(pass_context=True)
    async def randomphoto(self, ctx):
        db = sqlite3.connect("eco.sqlite")
        cursor = db.cursor()

        cursor.execute("SELECT url FROM aaa")
        results = cursor.fetchall()
        if results:
            url = random.choice(results)[0]
            emb = discord.Embed(title="–°–ª—É—á–∞–π–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è",
                                color=discord.Colour.gold())
            emb.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar)
            emb.set_footer(
                text=f"–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –Ω–∞–ø–∏—Å–∞–≤ {config.PREFIX}sendp –∏ —É–∫–∞–∑–∞–≤ –Ω–∞ –Ω–µ–µ —Å—Å—ã–ª–∫—É",
                icon_url=ctx.author.avatar)
            emb.set_image(url=url)
            await ctx.send(embed=emb)
        else:
            await ctx.send("–°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –ø—É—Å—Ç")

    @cum.command()
    async def sendphoto(self, ctx, url1):
        print(validators.url(url1))
        if validators.url(url1):
            db = sqlite3.connect("eco.sqlite")
            cursor = db.cursor()
            sql = "INSERT INTO aaa (url) VALUES (?)"
            cursor.execute(sql, (url1,))
            db.commit()
            cursor.close()
            db.close()
            await ctx.send("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        else:
            await ctx.send("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Å—Å—ã–ª–∫—É")

    @cum.command()
    async def join(self, ctx):
        global voice
        channel = ctx.message.author.voice.channel
        voice = get(self.bot.voice_clients, guild=ctx.guild) 
        if voice and voice.is_connected():
            await voice.move_to(channel)
        else:
            voice = await channel.connect()
            await ctx.send("—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É")

    @cum.command()
    async def leave(self, ctx):
        global voice
        voice = get(self.bot.voice_clients, guild=ctx.guild)
        await voice.disconnect()
        await ctx.send("—è –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞")

    @cum.command()
    async def profile(self, ctx, member: discord.Member = None):
        if member == None:
            member = ctx.author
        db = sqlite3.connect("eco.sqlite")
        cursor = db.cursor()
        cursor.execute(f"SELECT wallet, rep, lvl FROM eco WHERE user_id = {member.id}")
        balance = cursor.fetchone()
        try:
            wallet = balance[0]
            rep = balance[1]
            lvl = balance[2]
        except:
            wallet = 0
            lvl = 1
            rep = 0
        emb = discord.Embed(title=f"–ü—Ä–æ—Ñ–∏–ª—å {member.display_name}", color=discord.Colour.dark_gray())
        emb.add_field(name=f"–£—Ä–æ–≤–µ–Ω—å:",
                      value=lvl,
                      inline=True)
        emb.add_field(name=f"–ë–∞–ª–∞–Ω—Å:",
                      value=f"{wallet} ü¶ú",
                      inline=True)
        emb.add_field(name=f"–†–µ–ø—É—Ç–∞—Ü–∏—è:",
                      value=rep,
                      inline=True)
        await ctx.send(embed=emb)

    @cum.command()
    async def sendmoney(self, ctx, member: discord.Member = None, money: int = None):
        if member != None:
            if money is not None:
                if money > 0:
                    db = sqlite3.connect("eco.sqlite")
                    cursor = db.cursor()
                    cursor.execute(f"UPDATE eco SET wallet = wallet + {money} WHERE user_id = {member.id}")
                    cursor.execute(f"UPDATE eco SET wallet = wallet - {money} WHERE user_id = {ctx.author.id}")
                    db.commit()
                    await ctx.send("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                else:
                    await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ü¶ú –±–æ–ª—å—à–µ –Ω—É–ª—è")
            else:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ü¶ú")
        else:
            await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Ç–æ–≥–æ, –∫–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ü¶ú")

    @cum.command()
    @cum.cooldown(1, 3600, cum.BucketType.user)
    async def plusrep(self, ctx, user: discord.Member = None):
      if user != ctx.author:
        db = sqlite3.connect("eco.sqlite")
        cursor = db.cursor()
        cursor.execute(f"UPDATE eco SET rep = rep + 1 WHERE user_id = {user.id}")
        db.commit()
        await ctx.send("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
      else:
        await ctx.send("–¢—ã —á–µ –¥–æ–ª–±–∞–µ–±")
    @cum.command()
    async def help(self, ctx):
        emb = discord.Embed(title="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                            color=discord.Colour.dark_gray())
        emb.add_field(name="{}clear".format(prefix),
                      value='–û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ (—á–∏—Å–ª–æ)',
                      inline=True)
        emb.add_field(name="{}kick".format(prefix),
                      value='–í—ã–≥–Ω–∞—Ç—å –∫–æ–≥–æ-—Ç–æ —Å —Å–µ—Ä–≤–µ—Ä–∞',
                      inline=False)
        emb.add_field(
            name="{}ban".format(prefix),
            value='–ó–∞–±–∞–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –∫—Ä–∞–π–Ω–∏—Ö —Å–ª—É—á–∞—è—Ö)',
            inline=False)

        emb2 = discord.Embed(title='–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö',
                             color=discord.Colour.dark_gray())
        emb2.add_field(name=f"{prefix}profile",
                       value='–ú–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
                       inline=False)
        emb2.add_field(name=f"{prefix}join",
                       value='–ó–∞–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª',
                       inline=False)
        emb2.add_field(name=f"{prefix}leave", value='–í—ã–π—Ç–∏ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
        emb2.add_field(name=f"{prefix}random (number1, number2)",
                       value='–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ',
                       inline=False)
        emb2.add_field(name=f"{prefix}randomphoto",
                       value='–°–ª—É—á–∞–π–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
                       inline=False)

        emb3 = discord.Embed(title="–≠–∫–æ–Ω–æ–º–∏–∫–∞",
                             color=discord.Colour.dark_gray())
        emb3.add_field(name=f"{prefix}sendmoney (–∫–æ–º—É, –∫–æ–ª-–≤–æ)",
                       value='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é  ü¶ú',
                       inline=False)
        emb3.add_field(name=f"{prefix}plusrep (–∫–æ–º—É)", value="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ—Ö–≤–∞–ª—É (–º–æ–∂–Ω–æ —Ä–∞–∑ –≤ —á–∞—Å)",
                       inline=False)

      
      
        async def first(interaction: discord.Interaction):
            await message.edit(embed=emb)
            await interaction.response.defer()

        async def second(interaction: discord.Interaction):
            await message.edit(embed=emb2)
            await interaction.response.defer()

        async def third(interaction: discord.Interaction):
            await message.edit(embed=emb3)
            await interaction.response.defer()

        button_one = Button(label="1", style=discord.ButtonStyle.success)
        button_two = Button(label="2", style=discord.ButtonStyle.success)
        button_three = Button(label="3", style=discord.ButtonStyle.success)

        button_one.callback = lambda interaction: first(interaction)
        button_two.callback = lambda interaction: second(interaction)
        button_three.callback = lambda interaction: third(interaction)
        view = View()
        message = await ctx.send(embed=emb)
        view.add_item(button_one)
        view.add_item(button_two)
        view.add_item(button_three)
        await ctx.send(view=view)

async def setup(bot):
    await bot.add_cog(ForAll(bot))
